{"ast":null,"code":"var _jsxFileName = \"E:\\\\Funix\\\\Nodejs\\\\Assignment\\\\Assignment01\\\\Frontend\\\\src\\\\pages\\\\search\\\\Search.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Nav from \"../../components/browse/Nav\";\nimport SearchResult from \"../../components/search/SearchResult\";\nimport \"./Search.css\";\n\nconst Search = () => {\n  const [results, setResults] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchGenre, setSearchGenre] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"\");\n  const [searchLanguage, setSearchLanguage] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const [mediaTypes, setMediaTypes] = useState([]);\n  const user_token = \"8qlOkxz4wq\";\n  useEffect(() => {\n    fetch(`http://localhost:5000/api/movies/genres/${user_token}`).then(res => res.json()).then(data => setGenres(data)).catch(err => console.log(err));\n    fetch(`http://localhost:5000/api/movies/media-types/${user_token}`).then(res => res.json()).then(data => setMediaTypes(data)).catch(err => console.log(err));\n  }, []);\n\n  const handleSearch = () => {\n    const data = {\n      query: searchInput,\n      genre: searchGenre,\n      type: searchType,\n      language: searchLanguage\n    };\n\n    const postSearch = async () => {\n      await fetch(`http://localhost:5000/api/movies/search/${user_token}`, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(data => setResults(data.results)).catch(err => console.log(err));\n    };\n\n    postSearch();\n  };\n\n  const resetSearch = () => {\n    setResults(\"\");\n    setSearchInput(\"\");\n    setSearchGenre(\"\");\n    setSearchType(\"\");\n    setSearchLanguage(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"s009\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"basic-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type Keywords\",\n    onChange: e => setSearchInput(e.target.value),\n    value: searchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"svg-inline--fa fa-search fa-w-16\",\n    fill: \"#ccc\",\n    \"aria-hidden\": \"true\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"search\",\n    role: \"img\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"advance-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row third\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"genres\",\n    id: \"genres\",\n    value: searchGenre,\n    onChange: e => setSearchGenre(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, \"Select Genre\"), genres.map(genre => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: genre.name,\n      key: genre.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }\n    }, genre.name);\n  })), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"mediaTypes\",\n    id: \"mediaTypes\",\n    value: searchType,\n    onChange: e => setSearchType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, \"Select Type\"), mediaTypes.map(type => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: type.name,\n      key: mediaTypes.indexOf(type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    }, type);\n  })), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"languages\",\n    id: \"languages\",\n    value: searchLanguage,\n    onChange: e => setSearchLanguage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, \"Select Language\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, \"English\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"jp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, \"Japanese\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, \"Korean\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"group-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-delete\",\n    onClick: resetSearch,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, \"RESET\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-search\",\n    type: \"button\",\n    onClick: () => handleSearch(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"SEARCH\")))))))), /*#__PURE__*/React.createElement(SearchResult, {\n    results: results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Search;","map":{"version":3,"sources":["E:/Funix/Nodejs/Assignment/Assignment01/Frontend/src/pages/search/Search.jsx"],"names":["React","useState","useEffect","Nav","SearchResult","Search","results","setResults","searchInput","setSearchInput","searchGenre","setSearchGenre","searchType","setSearchType","searchLanguage","setSearchLanguage","genres","setGenres","mediaTypes","setMediaTypes","user_token","fetch","then","res","json","data","catch","err","console","log","handleSearch","query","genre","type","language","postSearch","method","body","JSON","stringify","headers","resetSearch","e","target","value","map","name","id","indexOf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Nav from \"../../components/browse/Nav\";\nimport SearchResult from \"../../components/search/SearchResult\";\nimport \"./Search.css\";\n\nconst Search = () => {\n  const [results, setResults] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchGenre, setSearchGenre] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"\");\n  const [searchLanguage, setSearchLanguage] = useState(\"\");\n  const [genres, setGenres] = useState([]);\n  const [mediaTypes, setMediaTypes] = useState([]);\n  const user_token = \"8qlOkxz4wq\";\n\n  useEffect(() => {\n    fetch(`http://localhost:5000/api/movies/genres/${user_token}`)\n      .then((res) => res.json())\n      .then((data) => setGenres(data))\n      .catch((err) => console.log(err));\n\n    fetch(`http://localhost:5000/api/movies/media-types/${user_token}`)\n      .then((res) => res.json())\n      .then((data) => setMediaTypes(data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleSearch = () => {\n    const data = {\n      query: searchInput,\n      genre: searchGenre,\n      type: searchType,\n      language: searchLanguage,\n    };\n\n    const postSearch = async () => {\n      await fetch(`http://localhost:5000/api/movies/search/${user_token}`, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => setResults(data.results))\n        .catch((err) => console.log(err));\n    };\n    postSearch();\n  };\n\n  const resetSearch = () => {\n    setResults(\"\");\n    setSearchInput(\"\");\n    setSearchGenre(\"\");\n    setSearchType(\"\");\n    setSearchLanguage(\"\");\n  };\n\n  return (\n    <div className=\"app\">\n      <Nav />\n      <div className=\"s009\">\n        <form>\n          <div className=\"inner-form\">\n            <div className=\"basic-search\">\n              <div className=\"input-field\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Type Keywords\"\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  value={searchInput}\n                />\n                <div className=\"icon-wrap\">\n                  <svg\n                    className=\"svg-inline--fa fa-search fa-w-16\"\n                    fill=\"#ccc\"\n                    aria-hidden=\"true\"\n                    data-prefix=\"fas\"\n                    data-icon=\"search\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 512 512\"\n                  >\n                    <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\n                  </svg>\n                </div>\n              </div>\n            </div>\n            <div className=\"advance-search\">\n              <div className=\"row third\">\n                <select\n                  name=\"genres\"\n                  id=\"genres\"\n                  value={searchGenre}\n                  onChange={(e) => setSearchGenre(e.target.value)}\n                >\n                  <option hidden>Select Genre</option>\n                  {genres.map((genre) => {\n                    return (\n                      <option value={genre.name} key={genre.id}>\n                        {genre.name}\n                      </option>\n                    );\n                  })}\n                </select>\n\n                <select\n                  name=\"mediaTypes\"\n                  id=\"mediaTypes\"\n                  value={searchType}\n                  onChange={(e) => setSearchType(e.target.value)}\n                >\n                  <option hidden>Select Type</option>\n                  {mediaTypes.map((type) => {\n                    return (\n                      <option value={type.name} key={mediaTypes.indexOf(type)}>\n                        {type}\n                      </option>\n                    );\n                  })}\n                </select>\n\n                <select\n                  name=\"languages\"\n                  id=\"languages\"\n                  value={searchLanguage}\n                  onChange={(e) => setSearchLanguage(e.target.value)}\n                >\n                  <option hidden>Select Language</option>\n                  <option value=\"en\">English</option>\n                  <option value=\"jp\">Japanese</option>\n                  <option value=\"kr\">Korean</option>\n                </select>\n                <div className=\"input-field\">\n                  <div className=\"result-count\"></div>\n                  <div className=\"group-btn\">\n                    <button\n                      className=\"btn-delete\"\n                      onClick={resetSearch}\n                      type=\"button\"\n                    >\n                      RESET\n                    </button>\n                    <button\n                      className=\"btn-search\"\n                      type=\"button\"\n                      onClick={() => handleSearch()}\n                    >\n                      SEARCH\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <SearchResult results={results} />\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}